[
  {
    "type": "constructor",
    "inputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "MAX_LEVERAGE",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "UPGRADE_INTERFACE_VERSION",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "addFee",
    "inputs": [
      {
        "name": "_fee",
        "type": "tuple",
        "internalType": "struct IMarkets.Fee",
        "components": [
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "openFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "closeFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "limitOrderFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "minLevPosHoney",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "addGroup",
    "inputs": [
      {
        "name": "_group",
        "type": "tuple",
        "internalType": "struct IMarkets.Group",
        "components": [
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "minLeverage",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxLeverage",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxCollateralP",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "addPair",
    "inputs": [
      {
        "name": "_pair",
        "type": "tuple",
        "internalType": "struct IMarkets.Pair",
        "components": [
          {
            "name": "from",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "to",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "feed",
            "type": "tuple",
            "internalType": "struct IMarkets.Feed",
            "components": [
              {
                "name": "baseID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "quoteID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "feedCalculation",
                "type": "uint8",
                "internalType": "enum IMarkets.FeedCalculation"
              },
              {
                "name": "useConfSpread",
                "type": "bool",
                "internalType": "bool"
              }
            ]
          },
          {
            "name": "groupIndex",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "feeIndex",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "addPairs",
    "inputs": [
      {
        "name": "_pairs",
        "type": "tuple[]",
        "internalType": "struct IMarkets.Pair[]",
        "components": [
          {
            "name": "from",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "to",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "feed",
            "type": "tuple",
            "internalType": "struct IMarkets.Feed",
            "components": [
              {
                "name": "baseID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "quoteID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "feedCalculation",
                "type": "uint8",
                "internalType": "enum IMarkets.FeedCalculation"
              },
              {
                "name": "useConfSpread",
                "type": "bool",
                "internalType": "bool"
              }
            ]
          },
          {
            "name": "groupIndex",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "feeIndex",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "feesCount",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getAllPairs",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "tuple[]",
        "internalType": "struct IMarkets.Pair[]",
        "components": [
          {
            "name": "from",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "to",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "feed",
            "type": "tuple",
            "internalType": "struct IMarkets.Feed",
            "components": [
              {
                "name": "baseID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "quoteID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "feedCalculation",
                "type": "uint8",
                "internalType": "enum IMarkets.FeedCalculation"
              },
              {
                "name": "useConfSpread",
                "type": "bool",
                "internalType": "bool"
              }
            ]
          },
          {
            "name": "groupIndex",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "feeIndex",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      },
      {
        "name": "",
        "type": "tuple[]",
        "internalType": "struct IMarkets.Group[]",
        "components": [
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "minLeverage",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxLeverage",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxCollateralP",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      },
      {
        "name": "",
        "type": "tuple[]",
        "internalType": "struct IMarkets.Fee[]",
        "components": [
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "openFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "closeFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "limitOrderFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "minLevPosHoney",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getPair",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "tuple",
        "internalType": "struct IMarkets.Pair",
        "components": [
          {
            "name": "from",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "to",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "feed",
            "type": "tuple",
            "internalType": "struct IMarkets.Feed",
            "components": [
              {
                "name": "baseID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "quoteID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "feedCalculation",
                "type": "uint8",
                "internalType": "enum IMarkets.FeedCalculation"
              },
              {
                "name": "useConfSpread",
                "type": "bool",
                "internalType": "bool"
              }
            ]
          },
          {
            "name": "groupIndex",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "feeIndex",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      },
      {
        "name": "",
        "type": "tuple",
        "internalType": "struct IMarkets.Group",
        "components": [
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "minLeverage",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxLeverage",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxCollateralP",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      },
      {
        "name": "",
        "type": "tuple",
        "internalType": "struct IMarkets.Fee",
        "components": [
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "openFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "closeFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "limitOrderFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "minLevPosHoney",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "groupCollateral",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_long",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "groupMaxCollateral",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "groupsCollaterals",
    "inputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "groupsCount",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "guaranteedSlEnabled",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "initialize",
    "inputs": [
      {
        "name": "_orders",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "isPairIndexListed",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isPairListed",
    "inputs": [
      {
        "name": "",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "orders",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract IOrders"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pairCloseFeeP",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pairFeed",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "tuple",
        "internalType": "struct IMarkets.Feed",
        "components": [
          {
            "name": "baseID",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "quoteID",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "feedCalculation",
            "type": "uint8",
            "internalType": "enum IMarkets.FeedCalculation"
          },
          {
            "name": "useConfSpread",
            "type": "bool",
            "internalType": "bool"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pairLimitOrderFeeP",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pairMaxLeverage",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pairMinLevPosHoney",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pairMinLeverage",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pairOpenFeeP",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "pairsCount",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "proxiableUUID",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "updateFee",
    "inputs": [
      {
        "name": "_id",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_fee",
        "type": "tuple",
        "internalType": "struct IMarkets.Fee",
        "components": [
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "openFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "closeFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "limitOrderFeeP",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "minLevPosHoney",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "updateGroup",
    "inputs": [
      {
        "name": "_id",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_group",
        "type": "tuple",
        "internalType": "struct IMarkets.Group",
        "components": [
          {
            "name": "name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "minLeverage",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxLeverage",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxCollateralP",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "updateGroupCollateral",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_amount",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_long",
        "type": "bool",
        "internalType": "bool"
      },
      {
        "name": "_increase",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "updatePair",
    "inputs": [
      {
        "name": "_pairIndex",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_pair",
        "type": "tuple",
        "internalType": "struct IMarkets.Pair",
        "components": [
          {
            "name": "from",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "to",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "feed",
            "type": "tuple",
            "internalType": "struct IMarkets.Feed",
            "components": [
              {
                "name": "baseID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "quoteID",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "feedCalculation",
                "type": "uint8",
                "internalType": "enum IMarkets.FeedCalculation"
              },
              {
                "name": "useConfSpread",
                "type": "bool",
                "internalType": "bool"
              }
            ]
          },
          {
            "name": "groupIndex",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "feeIndex",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "upgradeToAndCall",
    "inputs": [
      {
        "name": "newImplementation",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "data",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "event",
    "name": "FeeAdded",
    "inputs": [
      {
        "name": "index",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "name",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "FeeUpdated",
    "inputs": [
      {
        "name": "index",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "GroupAdded",
    "inputs": [
      {
        "name": "index",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "name",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "GroupUpdated",
    "inputs": [
      {
        "name": "index",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Initialized",
    "inputs": [
      {
        "name": "version",
        "type": "uint64",
        "indexed": false,
        "internalType": "uint64"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "PairAdded",
    "inputs": [
      {
        "name": "index",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "from",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      },
      {
        "name": "to",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "PairUpdated",
    "inputs": [
      {
        "name": "index",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Upgraded",
    "inputs": [
      {
        "name": "implementation",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "error",
    "name": "AddressEmptyCode",
    "inputs": [
      {
        "name": "target",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "ERC1967InvalidImplementation",
    "inputs": [
      {
        "name": "implementation",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "ERC1967NonPayable",
    "inputs": []
  },
  {
    "type": "error",
    "name": "FailedInnerCall",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidInitialization",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NotInitializing",
    "inputs": []
  },
  {
    "type": "error",
    "name": "UUPSUnauthorizedCallContext",
    "inputs": []
  },
  {
    "type": "error",
    "name": "UUPSUnsupportedProxiableUUID",
    "inputs": [
      {
        "name": "slot",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ]
  }
]
